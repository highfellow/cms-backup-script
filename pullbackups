#!/bin/bash
#
# Script to pull down a set of backups generated by 'backup' from a remote
# server. Intended to run nightly and generate a set of weekly and monthly
# snapshots from a smaller set of nightlies on the server.
#

# set some defaults
backupdir=/var/backups

if [ "$1" == "--help" ]; then
    echo "pullbackups"
    echo "pull a set of backups generated by backup script from a remote server"
    exit 1
fi

# work out where I am and find some things.
mydir=`readlink -f $0`
mydir=${mydir%/*}
. $mydir/bash-ini-multisection/ini-parse.sh
confdir=${0%/*}
if [ "$confdir" == "." ]; then
  confdir=`pwd`
fi
if [ "$confdir" == ".." ]; then
  confdir=`pwd`
  confdir=${confdir%/*}
fi
# expecting this script to be in path/bin with config in path/etc
confdir=${confdir%/*}/etc # edit this if your global config is somewhere else.

# set some defaults.
nightlyfiles=8
weeklyday=Tue
weeklyfiles=5
monthlyday=01
monthlyfiles=3

# parse the global configuration 
cfg_parser $confdir/pullbackups.ini
cfg_section global
eval backupdir=$backupdir # so that ~s work.
if [ "$backupdir" == "" ] ; then
  echo "Backup directory not found in $confdir/pullbackups.ini"
  exit 1
fi

echo "Pulling down backups to $backupdir"

cd $backupdir
date=`date`
for remote in $*; do
  # parse the ini file for this remote account
  if ! [ -f $confdir/pullbackups.d/$remote.ini ] ; then
    echo "Can't find remote configuration file: $confdir/pullbackups.d/$remote.ini"
    exit 1
  fi
  echo "processing backups for remote account: $remote"
  remotedir=
  cfg_parser $confdir/pullbackups.d/$remote.ini
  cfg_section remote
  if [ "$remotedir" == "" ] ; then
    echo "Remote directory not found in $confdir/pullbackups.d/$remote.ini"
    exit 1
  fi
  # iterate through list of remote configs
  eval remoteconfigs=$remoteconfigs # to split quoted words
  for config in ${remoteconfigs[*]}; do
    localdir=$backupdir/$remote/$config
    # make subdirs if needed
    mkdir -p $localdir/nightly $localdir/weekly $localdir/monthly
    # pull down last nightly from remote.
    echo "pulling last nightly for $config"
    if [ "`ls $localdir/nightly`" != "" ]; then
      olddir=$localdir/nightly/`ls -r $localdir/nightly | head -n 1`
    else
      olddir=$localdir/nightly/1970-01-01-00-00-00
      mkdir -p $olddir
      sleep 2 # so new dir is datestamped later.
    fi
    newdir=$localdir/nightly/`date +%Y-%m-%d-%H-%M-%S`
    rsync -atz --copy-links --partial --delete --link-dest=$olddir $remotedir/$config/latest/ $newdir
    echo "generating weeklies/monthlies for $config"
    # remove old backup files from auto directories.
    cd $localdir/nightly || {
      echo "Error - Can't find nightly backup dir."
      exit 1
    }
    ls -r | tail -n +$(( $nightlyfiles + 1 )) | xargs rm -rf
    if [ `date -d "$date" +%a` == "$weeklyday" ] && [ $weeklyfiles -gt 0 ] ; then
      cp -rl $newdir $localdir/weekly
    fi
    if [ $weeklyfiles -gt 0 ] ; then
      cd $localdir/weekly || {
        echo "Error - Can't find weekly backup dir."
        exit 1
      }
      ls -r | tail -n +$(( $weeklyfiles + 1 )) | xargs rm -rf
    fi
    if [ `date -d "$date" +%d` == "$monthlyday" ] && [ $monthlyfiles -gt 0 ] ; then
      cp -rl $newdir $localdir/monthly
    fi
    if [ $monthlyfiles -gt 0 ] ; then
      cd $localdir/monthly || {
        echo "Error - Can't find monthly backup dir."
        exit 1
      }
      ls -r | tail -n +$(( $monthlyfiles + 1 )) | xargs rm -rf
    fi
  done
done
