#!/bin/bash
#
# Script to pull down a set of backups generated by 'backup' from a remote
# server. Intended to run nightly and generate a set of weekly and monthly
# snapshots from a smaller set of nightlies on the server.
#

# set some defaults
backupdir=/var/backups

if [ "$1" == "--help" ]; then
    echo "pullbackups"
    echo "pull a set of backups generated by backup script from a remote server"
    exit 1
fi

# work out where I am and find some things.
mydir=`readlink -f $0`
mydir=${mydir%/*}
. $mydir/bash-ini-multisection/ini-parse.sh
confdir=${0%/*}
if [ "$confdir" == "." ]; then
  confdir=`pwd`
fi
if [ "$confdir" == ".." ]; then
  confdir=`pwd`
  confdir=${confdir%/*}
fi
# expecting this script to be in path/bin with config in path/etc
confdir=${confdir%/*}/etc # edit this if your global config is somewhere else.

# set some defaults.
nightlyfiles=8
weeklyday=Tue
weeklyfiles=5
monthlyday=01
monthlyfiles=3

# parse the global configuration 
cfg_parser $confdir/pullbackups.ini
cfg_section global
eval backupdir=$backupdir
if [ "$rsyncsrc" == "" ] ; then
  echo "Rsync source string not found in $confdir/pullbackups.ini"
  exit 1
fi
if [ "$backupdir" == "" ] ; then
  echo "Backup directory not found in $confdir/pullbackups.ini"
  exit 1
fi

echo "Pulling down backups from $rsyncsrc to $backupdir"

cd $backupdir
rsync -av $rsyncsrc/ .
date=`date`
for config in *; do
  # skip non-directories
  if ! [ -d $backupdir/$config ] ; then
    continue
  fi
  echo "generating weeklies/monthlies for $config"
  # find latest nightly backup and copy to weekly/monthly dir if appropriate
  tarfile=$backupdir/$config/nightly/`ls $backupdir/$config/nightly | tail -n 1`
  # remove old backup files from auto directories.
  cd $backupdir/$config/nightly || {
    echo "Error - Can't find nightly backup dir."
    exit 1
  }
  ls -r | tail -n +$(( $nightlyfiles + 1 )) | xargs rm -f
  if [ `date -d "$date" +%a` == "$weeklyday" ] && [ $weeklyfiles -gt 0 ] ; then
    cp $tarfile $backupdir/$config/weekly
  fi
  if [ $weeklyfiles -gt 0 ] ; then
    cd $backupdir/$config/weekly || {
      echo "Error - Can't find weekly backup dir."
      exit 1
    }
    ls -r | tail -n +$(( $weeklyfiles + 1 )) | xargs rm -f
  fi
  if [ `date -d "$date" +%d` == "$monthlyday" ] && [ $monthlyfiles -gt 0 ] ; then
    cp $tarfile $backupdir/$config/monthly
  fi
  if [ $monthlyfiles -gt 0 ] ; then
    cd $backupdir/$config/monthly || {
      echo "Error - Can't find monthly backup dir."
      exit 1
    }
    ls -r | tail -n +$(( $monthlyfiles + 1 )) | xargs rm -f
  fi
done
